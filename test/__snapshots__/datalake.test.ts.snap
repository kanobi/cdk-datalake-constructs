// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check Resources 1`] = `
Object {
  "Outputs": Object {
    "datalakeDataLakeAthenaWorkgroup48F354CE": Object {
      "Value": "test-lake-workgroup-alpha-us-east-1-098765432109",
    },
    "datalakeDataLakeDefaultDatabaseF6C404EB": Object {
      "Value": "test-lake",
    },
    "datalakeDataLakeLogBucket7E4B6A14": Object {
      "Value": Object {
        "Ref": "datalakedatalakelogbucket0A814944",
      },
    },
    "datalaketestlakedatalakeadminroleDataLakeAdminRoleF412372B": Object {
      "Value": Object {
        "Ref": "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
      },
    },
    "datalaketestlakedatalakecreatorroleDataLakeDatabaseCreatorRoleC012854C": Object {
      "Value": Object {
        "Ref": "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1fArtifactHash827EA535": Object {
      "Description": "Artifact hash for asset \\"298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1f\\"",
      "Type": "String",
    },
    "AssetParameters298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1fS3Bucket2F37597C": Object {
      "Description": "S3 bucket for asset \\"298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1f\\"",
      "Type": "String",
    },
    "AssetParameters298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1fS3VersionKey1B802B5E": Object {
      "Description": "S3 key for asset version \\"298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1f\\"",
      "Type": "String",
    },
    "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409ArtifactHash5376A87D": Object {
      "Description": "Artifact hash for asset \\"3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409\\"",
      "Type": "String",
    },
    "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3BucketB33E6CCB": Object {
      "Description": "S3 bucket for asset \\"3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409\\"",
      "Type": "String",
    },
    "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3VersionKey7B841CAE": Object {
      "Description": "S3 key for asset version \\"3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409\\"",
      "Type": "String",
    },
    "AssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7ArtifactHash88237742": Object {
      "Description": "Artifact hash for asset \\"4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7\\"",
      "Type": "String",
    },
    "AssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7S3BucketAFA2A4C8": Object {
      "Description": "S3 bucket for asset \\"4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7\\"",
      "Type": "String",
    },
    "AssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7S3VersionKeyBA5D3250": Object {
      "Description": "S3 key for asset version \\"4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A": Object {
      "Description": "Artifact hash for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F": Object {
      "Description": "S3 bucket for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626": Object {
      "Description": "S3 key for asset version \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766ArtifactHash1433CB4E": Object {
      "Description": "Artifact hash for asset \\"8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766\\"",
      "Type": "String",
    },
    "AssetParameters8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766S3BucketA0D0EA6E": Object {
      "Description": "S3 bucket for asset \\"8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766\\"",
      "Type": "String",
    },
    "AssetParameters8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766S3VersionKeyCC2E332C": Object {
      "Description": "S3 key for asset version \\"8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766\\"",
      "Type": "String",
    },
    "AssetParametersabc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755ArtifactHash48012D0B": Object {
      "Description": "Artifact hash for asset \\"abc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755\\"",
      "Type": "String",
    },
    "AssetParametersabc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755S3BucketDD8C80DC": Object {
      "Description": "S3 bucket for asset \\"abc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755\\"",
      "Type": "String",
    },
    "AssetParametersabc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755S3VersionKey8EC31A72": Object {
      "Description": "S3 key for asset version \\"abc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755\\"",
      "Type": "String",
    },
    "AssetParametersb44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950ArtifactHash4DDC3FD0": Object {
      "Description": "Artifact hash for asset \\"b44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950\\"",
      "Type": "String",
    },
    "AssetParametersb44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950S3Bucket61676D8F": Object {
      "Description": "S3 bucket for asset \\"b44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950\\"",
      "Type": "String",
    },
    "AssetParametersb44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950S3VersionKey8AA54FD3": Object {
      "Description": "S3 key for asset version \\"b44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "datalakedatalakelogbucket0A814944",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdaGlueExecutionFailListenerLambdaD8F79966": Object {
      "DependsOn": Array [
        "SingletonLambdaGlueExecutionFailListenerLambdaServiceRoleDefaultPolicy6D106F9E",
        "SingletonLambdaGlueExecutionFailListenerLambdaServiceRole67F5B9CE",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "
import boto3
import json
import os
import re

def handler(event, context):
    try:
        jobRunId = event['detail']['jobRunId']
        jobName = event['detail']['jobName']
    except:
        raise Exception(f'Received an malformed event. ({event})')
        
    # get the current execution attempt, we parse it from the jobRunId which has a _attempt_# suffix on retries
    try:
        curExecutionAttempt = int(re.findall('_attempt_(\\\\d*)$', jobRunId)[0])
    except IndexError:
        curExecutionAttempt = 0
    
    # get the number of MaxRetries for this glue job
    try:
        glue_client = boto3.client('glue')
        maxRetries = glue_client.get_job(JobName=jobName)['Job']['MaxRetries']
    except Exception as e:
        raise Exception(f'Failed to access the Glue API to get the MaxRetries parameter. ({e})')
        
    # is this the last execution? if yes we send out the event
    isLastExecutionAttempt = curExecutionAttempt == maxRetries
    print(f'Job name: {jobName}, is last execution attempt: {isLastExecutionAttempt}, current attempt: {curExecutionAttempt}, max retry attempts: {maxRetries}')
    if isLastExecutionAttempt:
        event_client = boto3.client('events')
        event_client.put_events(Entries=[{
            'Source': os.environ['eventToSendSource'],
            'Detail': json.dumps(event['detail']),
            'DetailType': os.environ['eventToSendDetailType']
        }])
    ",
        },
        "Description": "Checks if an error of a Glue job was on the last attempt (no more retries) in which case the function sends out an event.",
        "Environment": Object {
          "Variables": Object {
            "eventToSendDetailType": "All Execution Attempts Failed",
            "eventToSendSource": "custom.aws.glue.allExecutionAttemptsFailed",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaGlueExecutionFailListenerLambdaServiceRole67F5B9CE",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaGlueExecutionFailListenerLambdaServiceRole67F5B9CE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdaGlueExecutionFailListenerLambdaServiceRoleDefaultPolicy6D106F9E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:events:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":event-bus/default",
                  ],
                ],
              },
            },
            Object {
              "Action": "glue:GetJob",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glue:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":job/iot_data_streaming-datalake-alpha-us-east-1-123456789012",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonLambdaGlueExecutionFailListenerLambdaServiceRoleDefaultPolicy6D106F9E",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambdaGlueExecutionFailListenerLambdaServiceRole67F5B9CE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalakeRule642350D6": Object {
      "Properties": Object {
        "Name": "iot-generator-datalake-alpha-us-east-1-123456789012",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "iotdatadatasetstackNestedStackiotdatadatasetstackNestedStackResource879D8A95",
                "Outputs.iotdatadatasetstackdatageneratorfunction20EE8878Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeRuleAllowEventRuleiotdatadatasetstackdatageneratorfunctionF74D5B301C76D430": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "iotdatadatasetstackNestedStackiotdatadatasetstackNestedStackResource879D8A95",
            "Outputs.iotdatadatasetstackdatageneratorfunction20EE8878Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "datalakeRule642350D6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "datalakedatalakelogbucket0A814944": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketName": "test-lake-log-bucket-alpha-us-east-1-098765432109",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 30,
              "Status": "Enabled",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "datalakedatalakelogbucketAutoDeleteObjectsCustomResource3DCF9F10": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "datalakedatalakelogbucketPolicyD1691576",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "datalakedatalakelogbucket0A814944",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "datalakedatalakelogbucketPolicyD1691576": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "datalakedatalakelogbucket0A814944",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "datalakedatalakelogbucket0A814944",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "datalakedatalakelogbucket0A814944",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "datalakedataproductdatabaseAECF5DD4": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "data-product",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "datalakedataproductlfdbcreatorpermissionC1CC76B4": Object {
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "ALTER",
          "CREATE_TABLE",
          "DROP",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "data-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdataaccesstableperm0E419435": Object {
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalakeiotdataetljobRole82D6911F",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "SELECT",
          "DESCRIBE",
        ],
        "Resource": Object {
          "TableResource": Object {
            "DatabaseName": "data-product",
            "Name": "r_iot_data",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdatacreatetablepermF7B199EF": Object {
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalakeiotdataetljobRole82D6911F",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "ALTER",
          "CREATE_TABLE",
          "DESCRIBE",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "data-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdatadatalakecrawleriotdataFailureRule3480B3AE": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.ac is in Failed state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.ac",
            ],
            "state": Array [
              "Failed",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acFailed",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdatadatalakecrawleriotdataRole57E7DB02": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "RoleName": "iot-data-crawler-role-alpha-\${token[aws.region.4]}-\${token[aws.a",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalakeiotdatadatalakecrawleriotdataRoleDefaultPolicy9E0C10EC": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalakeiotdatadatalakecrawleriotdataRoleDefaultPolicy9E0C10EC",
        "Roles": Array [
          Object {
            "Ref": "datalakeiotdatadatalakecrawleriotdataRole57E7DB02",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalakeiotdatadatalakecrawleriotdataSuccessRuleB9543925": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.ac is in Succeeded state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.ac",
            ],
            "state": Array [
              "Succeeded",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acSucceeded",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdatadatalakecrawleriotdatadatalakecrawleriotdatacrawleralphatokenawsregion4tokenawsac9D4065A5": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "DatabaseName": "data-product",
        "Name": "iot-data-crawler-alpha-\${token[aws.region.4]}-\${token[aws.ac",
        "Role": Object {
          "Fn::GetAtt": Array [
            "datalakeiotdatadatalakecrawleriotdataRole57E7DB02",
            "Arn",
          ],
        },
        "Targets": Object {
          "S3Targets": Array [
            Object {
              "Path": "s3://iot-datalake-alpha-us-east-1-123456789012/raw/iot-data/",
            },
          ],
        },
      },
      "Type": "AWS::Glue::Crawler",
    },
    "datalakeiotdatadatalakecrawleriotdatadatalakecreatorpermission8D948A5C": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalakeiotdatadatalakecrawleriotdataRole57E7DB02",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::iot-datalake-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdatadatalakecrawleriotdataglueroledatabasepermissionD72FB807": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalakeiotdatadatalakecrawleriotdataRole57E7DB02",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "CREATE_TABLE",
          "DESCRIBE",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "data-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdatadatalakecreatorpermission52ACD6B5": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::iot-datalake-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdatadatalakelocationpermission6BCCE70F": Object {
      "DependsOn": Array [
        "datalakeiotdatalfresources3bucketiotdata3C87FC83",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::iot-datalake-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeiotdataetljobFailureRuleF4FD2FA0": Object {
      "Properties": Object {
        "Description": "Event triggered when Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 is in FAILED state(s)",
        "EventPattern": Object {
          "detail": Object {
            "jobName": Array [
              "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
            ],
            "state": Array [
              "FAILED",
            ],
          },
          "detail-type": Array [
            "Glue Job State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "iot_data_streaming-datalake-alpha-us-east-1-123456789012FAILED",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdataetljobRole82D6911F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSGlueConsoleFullAccess",
              ],
            ],
          },
        ],
        "RoleName": "glue-streaming-datalake-alpha-us-east-1-123456789012",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalakeiotdataetljobRoleDefaultPolicy724F29EE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3BucketB33E6CCB",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3BucketB33E6CCB",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "datalakedatalakelogbucket0A814944",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "datalakedatalakelogbucket0A814944",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "datalakedatalakelogbucket0A814944",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "datalakedatalakelogbucket0A814944",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::iot-datalake-alpha-us-east-1-123456789012",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::iot-datalake-alpha-us-east-1-123456789012/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "iotdatadatasetstackNestedStackiotdatadatasetstackNestedStackResource879D8A95",
                  "Outputs.iotdatadatasetstackDataStreamkinesisstream7FDE6CF5Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalakeiotdataetljobRoleDefaultPolicy724F29EE",
        "Roles": Array [
          Object {
            "Ref": "datalakeiotdataetljobRole82D6911F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalakeiotdataetljobSuccessRule32B25DD9": Object {
      "Properties": Object {
        "Description": "Event triggered when Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 is in SUCCEEDED state(s)",
        "EventPattern": Object {
          "detail": Object {
            "jobName": Array [
              "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
            ],
            "state": Array [
              "SUCCEEDED",
            ],
          },
          "detail-type": Array [
            "Glue Job State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "iot_data_streaming-datalake-alpha-us-east-1-123456789012SUCCEEDED",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdataetljobTimeoutRule0D72C645": Object {
      "Properties": Object {
        "Description": "Event triggered when Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 is in TIMEOUT state(s)",
        "EventPattern": Object {
          "detail": Object {
            "jobName": Array [
              "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
            ],
            "state": Array [
              "TIMEOUT",
            ],
          },
          "detail-type": Array [
            "Glue Job State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "iot_data_streaming-datalake-alpha-us-east-1-123456789012TIMEOUT",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdataetljobiotdatastreamingdatalakealphauseast1123456789012allexecutionattemptsfailedruleB281A28B": Object {
      "Properties": Object {
        "Description": "Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 failed or timed out on the last attempt. There will be no retries of the job after this error.",
        "EventPattern": Object {
          "detail": Object {
            "jobName": Array [
              "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
            ],
          },
          "detail-type": Array [
            "All Execution Attempts Failed",
          ],
          "source": Array [
            "custom.aws.glue.allExecutionAttemptsFailed",
          ],
        },
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdataetljobiotdatastreamingdatalakealphauseast1123456789012gluejob0B60DECB": Object {
      "Properties": Object {
        "Command": Object {
          "Name": "gluestreaming",
          "PythonVersion": "3",
          "ScriptLocation": Object {
            "Fn::Join": Array [
              "",
              Array [
                "s3://",
                Object {
                  "Ref": "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3BucketB33E6CCB",
                },
                "/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3VersionKey7B841CAE",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3ad1a6142f96669dfbc3fb8407107094810702617c7d726e0caece75f9570409S3VersionKey7B841CAE",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "DefaultArguments": Object {
          "--DESTINATION_BUCKET": "iot-datalake-alpha-us-east-1-123456789012",
          "--DESTINATION_DATABASE": "source-lake",
          "--DESTINATION_TABLE": "p_iot_data",
          "--SOURCE_DATABASE": "source-lake",
          "--SOURCE_TABLE": "r_iot_data",
          "--STREAM_BATCH_TIME_SECS": "100 seconds",
          "--TempDir": Object {
            "Fn::Join": Array [
              "",
              Array [
                "s3://",
                Object {
                  "Ref": "datalakedatalakelogbucket0A814944",
                },
                "/temp/",
              ],
            ],
          },
          "--class": "GlueApp",
          "--enable-continuous-cloudwatch-log": true,
          "--enable-continuous-log-filter": true,
          "--enable-glue-datacatalog": true,
          "--enable-metrics": true,
          "--enable-spark-ui": true,
          "--job-bookmark-option": "job-bookmark-disable",
          "--job-language": "python",
          "--region": Object {
            "Ref": "AWS::Region",
          },
          "--spark-event-logs-path": Object {
            "Fn::Join": Array [
              "",
              Array [
                "s3://",
                Object {
                  "Ref": "datalakedatalakelogbucket0A814944",
                },
                "/logs/",
              ],
            ],
          },
        },
        "Description": "Glue ETL Streaming job to convert JSON to Parquet",
        "ExecutionProperty": Object {
          "MaxConcurrentRuns": 1,
        },
        "GlueVersion": "2.0",
        "MaxRetries": 3,
        "Name": "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
        "NumberOfWorkers": 2,
        "Role": Object {
          "Ref": "datalakeiotdataetljobRole82D6911F",
        },
        "Timeout": 2880,
        "WorkerType": "G.1X",
      },
      "Type": "AWS::Glue::Job",
    },
    "datalakeiotdataetljobopsdashboard395C7934": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"# iot_data_streaming-datalake-alpha-us-east-1-123456789012 Job Result\\"}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Success Count\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[{\\"label\\":\\"Success Count\\",\\"expression\\":\\"SEARCH('MetricName=\\\\\\"TriggeredRules\\\\\\" RuleName=\\\\\\"",
              Object {
                "Ref": "datalakeiotdataetljobSuccessRule32B25DD9",
              },
              "\\\\\\"', 'Sum', 900)\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Failure Count\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[{\\"label\\":\\"Failure Count\\",\\"expression\\":\\"SEARCH('MetricName=\\\\\\"TriggeredRules\\\\\\" RuleName=\\\\\\"",
              Object {
                "Ref": "datalakeiotdataetljobFailureRuleF4FD2FA0",
              },
              "\\\\\\"', 'Sum', 900)\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Timeout Count\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[{\\"label\\":\\"Timeout Count\\",\\"expression\\":\\"SEARCH('MetricName=\\\\\\"TriggeredRules\\\\\\" RuleName=\\\\\\"",
              Object {
                "Ref": "datalakeiotdataetljobTimeoutRule0D72C645",
              },
              "\\\\\\"', 'Sum', 900)\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":7,\\"properties\\":{\\"markdown\\":\\"# iot_data_streaming-datalake-alpha-us-east-1-123456789012 JVM Glue Driver Stats Alarms\\"}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":8,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"glue.driver.BlockManager.disk.diskSpaceUsed_MB (Average)\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/Glue\\",\\"glue.driver.BlockManager.disk.diskSpaceUsed_MB\\",\\"JobName\\",\\"iot_data_streaming-datalake-alpha-us-east-1-123456789012\\",\\"JobRunId\\",\\"ALL\\",\\"Type\\",\\"gauge\\"]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":8,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"glue.driver.aggregate.elapsedTime (Average)\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/Glue\\",\\"glue.driver.aggregate.elapsedTime\\",\\"JobName\\",\\"iot_data_streaming-datalake-alpha-us-east-1-123456789012\\",\\"JobRunId\\",\\"ALL\\",\\"Type\\",\\"count\\"]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":14,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"",
              Object {
                "Ref": "datalakeiotdataetljobopsjvmheapSizeexceeding90PercentalarmBB5C81D7",
              },
              "\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "datalakeiotdataetljobopsjvmheapSizeexceeding90PercentalarmBB5C81D7",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":14,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"",
              Object {
                "Ref": "datalakeiotdataetljobopsmetricallexecutionattemptsfailedalarmBE095274",
              },
              "\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "datalakeiotdataetljobopsmetricallexecutionattemptsfailedalarmBE095274",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":20,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"",
              Object {
                "Ref": "datalakeiotdataetljobopsjvmheapSizeexceeding80percentalarmBCA7A162",
              },
              "\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "datalakeiotdataetljobopsjvmheapSizeexceeding80percentalarmBCA7A162",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":20,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"",
              Object {
                "Ref": "datalakeiotdataetljobopsmetricexecutionfailurealarm7D0C3477",
              },
              "\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "datalakeiotdataetljobopsmetricexecutionfailurealarm7D0C3477",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}}]}",
            ],
          ],
        },
        "DashboardName": "ETL_iot_data_streaming-datalake-alpha-us-east-1-123456789012",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "datalakeiotdataetljobopsjvmheapSizeexceeding80percentalarmBCA7A162": Object {
      "Properties": Object {
        "AlarmDescription": "Jvm Heap Size exceeding 80% glue job (iot_data_streaming-datalake-alpha-us-east-1-123456789012)",
        "AlarmName": "iot_data_streaming-datalake-alpha-us-east-1-123456789012 JvmHeapSizeExceeding80",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "JobName",
            "Value": "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
          },
          Object {
            "Name": "JobRunId",
            "Value": "ALL",
          },
          Object {
            "Name": "Type",
            "Value": "gauge",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "glue.ALL.jvm.heap.usage",
        "Namespace": "AWS/Glue",
        "Period": 86400,
        "Statistic": "Maximum",
        "Threshold": 0.8,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "datalakeiotdataetljobopsjvmheapSizeexceeding90PercentalarmBB5C81D7": Object {
      "Properties": Object {
        "AlarmDescription": "Jvm Heap Size exceeding 90% glue job (iot_data_streaming-datalake-alpha-us-east-1-123456789012)",
        "AlarmName": "iot_data_streaming-datalake-alpha-us-east-1-123456789012 JvmHeapSizeExceeding90",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "JobName",
            "Value": "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
          },
          Object {
            "Name": "JobRunId",
            "Value": "ALL",
          },
          Object {
            "Name": "Type",
            "Value": "gauge",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "glue.ALL.jvm.heap.usage",
        "Namespace": "AWS/Glue",
        "Period": 86400,
        "Statistic": "Maximum",
        "Threshold": 0.9,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "datalakeiotdataetljobopsmetricallexecutionattemptsfailedalarmBE095274": Object {
      "Properties": Object {
        "AlarmDescription": "Error while running the Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 on the last attempt. There will be no retries of the job after this error.",
        "AlarmName": "iot_data_streaming-datalake-alpha-us-east-1-123456789012 AllExecutionAttemptsFailed",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "RuleName",
            "Value": Object {
              "Ref": "datalakeiotdataetljobiotdatastreamingdatalakealphauseast1123456789012allexecutionattemptsfailedruleB281A28B",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "TriggeredRules",
        "Namespace": "AWS/Events",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "datalakeiotdataetljobopsmetricexecutionfailurealarm7D0C3477": Object {
      "Properties": Object {
        "AlarmDescription": "Error while running the Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 on the current attempt. There might be job retries after this error.",
        "AlarmName": "iot_data_streaming-datalake-alpha-us-east-1-123456789012 ExecutionFailure",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "RuleName",
            "Value": Object {
              "Ref": "datalakeiotdataetljobFailureRuleF4FD2FA0",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "TriggeredRules",
        "Namespace": "AWS/Events",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "datalakeiotdatalfresources3bucketiotdata3C87FC83": Object {
      "Properties": Object {
        "ResourceArn": "arn:aws:s3:::iot-datalake-alpha-us-east-1-123456789012",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "datalakeiotdatastreamingdatalakealphauseast1123456789012executionfailurerule71FB49B4": Object {
      "Properties": Object {
        "Description": "Glue job iot_data_streaming-datalake-alpha-us-east-1-123456789012 failed or timed out on an attempt. There might be job retries after this error.",
        "EventPattern": Object {
          "detail": Object {
            "jobName": Array [
              "iot_data_streaming-datalake-alpha-us-east-1-123456789012",
            ],
            "state": Array [
              "FAILED",
              "TIMEOUT",
            ],
          },
          "detail-type": Array [
            "Glue Job State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaGlueExecutionFailListenerLambdaD8F79966",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakeiotdatastreamingdatalakealphauseast1123456789012executionfailureruleAllowEventRuledatalakeiotdataetljobGlueExecutionFailListenerLambdaSingletoniotdatastreamingdatalakealphauseast1123456789012EC59DD0138C3C444": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaGlueExecutionFailListenerLambdaD8F79966",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "datalakeiotdatastreamingdatalakealphauseast1123456789012executionfailurerule71FB49B4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "datalakeiotdatatableriotdatagluetableEB17932D": Object {
      "Properties": Object {
        "CatalogId": "123456789012",
        "DatabaseName": Object {
          "Ref": "datalakedataproductdatabaseAECF5DD4",
        },
        "TableInput": Object {
          "Description": "Raw IOT Sensor data",
          "Name": "r_iot_data",
          "Parameters": Object {
            "EXTERNAL": true,
            "classification": "json",
            "has_encrypted_data": false,
            "streamARN": "arn:aws:kinesis:us-east-1:123456789012:stream/iot-data-stream-alpha-us-east-1-123456789012",
            "typeOfData": "kinesis",
          },
          "PartitionKeys": Array [],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "sensor_id",
                "Type": "int",
              },
              Object {
                "Name": "current_temperature",
                "Type": "double",
              },
              Object {
                "Name": "status",
                "Type": "string",
              },
              Object {
                "Name": "event_time",
                "Type": "string",
              },
            ],
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": "s3://iot-datalake-alpha-us-east-1-123456789012/raw/iot-data/",
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "Parameters": Object {
              "serialization.format": "1",
            },
            "SerdeInfo": Object {
              "Parameters": Object {
                "paths": "",
              },
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "datalakereviewsdatalakecrawlerreviewsFailureRule8A510B6D": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acc is in Failed state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acc",
            ],
            "state": Array [
              "Failed",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.accFailed",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakereviewsdatalakecrawlerreviewsRole53D63166": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "RoleName": "reviews-crawler-role-alpha-\${token[aws.region.4]}-\${token[aws.ac",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalakereviewsdatalakecrawlerreviewsRoleDefaultPolicyEA5FC76B": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalakereviewsdatalakecrawlerreviewsRoleDefaultPolicyEA5FC76B",
        "Roles": Array [
          Object {
            "Ref": "datalakereviewsdatalakecrawlerreviewsRole53D63166",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalakereviewsdatalakecrawlerreviewsSuccessRule5E6D1B94": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acc is in Succeeded state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acc",
            ],
            "state": Array [
              "Succeeded",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.accSucceeded",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalakereviewsdatalakecrawlerreviewsdatalakecrawlerreviewscrawleralphatokenawsregion4tokenawsacc183EBA58": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "DatabaseName": "data-product",
        "Name": "reviews-crawler-alpha-\${token[aws.region.4]}-\${token[aws.acc",
        "Role": Object {
          "Fn::GetAtt": Array [
            "datalakereviewsdatalakecrawlerreviewsRole53D63166",
            "Arn",
          ],
        },
        "Targets": Object {
          "S3Targets": Array [
            Object {
              "Path": "s3://reviews-data-alpha-us-east-1-123456789012/raw/reviews/",
            },
          ],
        },
      },
      "Type": "AWS::Glue::Crawler",
    },
    "datalakereviewsdatalakecrawlerreviewsdatalakecreatorpermission2607668E": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalakereviewsdatalakecrawlerreviewsRole53D63166",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::reviews-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakereviewsdatalakecrawlerreviewsglueroledatabasepermission807877B1": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalakereviewsdatalakecrawlerreviewsRole53D63166",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "CREATE_TABLE",
          "DESCRIBE",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "data-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakereviewsdatalakecreatorpermissionFD79C6A6": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::reviews-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakereviewsdatalakelocationpermission3C7E70C8": Object {
      "DependsOn": Array [
        "datalakereviewslfresources3bucketreviews54B36CB0",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::reviews-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakereviewslfresources3bucketreviews54B36CB0": Object {
      "Properties": Object {
        "ResourceArn": "arn:aws:s3:::reviews-data-alpha-us-east-1-123456789012",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "datalaketaxigreendatalakecrawlertaxigreenFailureRule6ED14D84": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws. is in Failed state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws.",
            ],
            "state": Array [
              "Failed",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws.Failed",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalaketaxigreendatalakecrawlertaxigreenRole413AA793": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "RoleName": "taxi-green-crawler-role-alpha-\${token[aws.region.4]}-\${token[aws",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalaketaxigreendatalakecrawlertaxigreenRoleDefaultPolicy76293C30": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketaxigreendatalakecrawlertaxigreenRoleDefaultPolicy76293C30",
        "Roles": Array [
          Object {
            "Ref": "datalaketaxigreendatalakecrawlertaxigreenRole413AA793",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketaxigreendatalakecrawlertaxigreenSuccessRule68E08BF2": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws. is in Succeeded state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws.",
            ],
            "state": Array [
              "Succeeded",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws.Succeeded",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalaketaxigreendatalakecrawlertaxigreendatalakecrawlertaxigreencrawleralphatokenawsregion4tokenawsDB106E4B": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "DatabaseName": "taxi-product",
        "Name": "taxi-green-crawler-alpha-\${token[aws.region.4]}-\${token[aws.",
        "Role": Object {
          "Fn::GetAtt": Array [
            "datalaketaxigreendatalakecrawlertaxigreenRole413AA793",
            "Arn",
          ],
        },
        "Targets": Object {
          "S3Targets": Array [
            Object {
              "Path": "s3://taxi-green-data-alpha-us-east-1-123456789012/raw/green/",
            },
          ],
        },
      },
      "Type": "AWS::Glue::Crawler",
    },
    "datalaketaxigreendatalakecrawlertaxigreendatalakecreatorpermission5DD976DD": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketaxigreendatalakecrawlertaxigreenRole413AA793",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::taxi-green-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxigreendatalakecrawlertaxigreenglueroledatabasepermissionD67FCC8B": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketaxigreendatalakecrawlertaxigreenRole413AA793",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "CREATE_TABLE",
          "DESCRIBE",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "taxi-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxigreendatalakecreatorpermissionF42C2E7E": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::taxi-green-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxigreendatalakelocationpermission0A044D5E": Object {
      "DependsOn": Array [
        "datalaketaxigreenlfresources3buckettaxigreen67B22F40",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::taxi-green-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxigreenlfresources3buckettaxigreen67B22F40": Object {
      "Properties": Object {
        "ResourceArn": "arn:aws:s3:::taxi-green-data-alpha-us-east-1-123456789012",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "datalaketaxiproductdatabase4B8A23BF": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "taxi-product",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "datalaketaxiproductlfdbcreatorpermission5C31145A": Object {
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "ALTER",
          "CREATE_TABLE",
          "DROP",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "taxi-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowFailureRule1A92C918": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[aws is in Failed state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[aws",
            ],
            "state": Array [
              "Failed",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[awsFailed",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDE7805CA": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "RoleName": "taxi-yellow-crawler-role-alpha-\${token[aws.region.4]}-\${token[aw",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDefaultPolicy6C20769E": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDefaultPolicy6C20769E",
        "Roles": Array [
          Object {
            "Ref": "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDE7805CA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowSuccessRule43B06F1F": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "Description": "Event triggered when Glue Crawler taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[aws is in Succeeded state(s)",
        "EventPattern": Object {
          "detail": Object {
            "crawlerName": Array [
              "taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[aws",
            ],
            "state": Array [
              "Succeeded",
            ],
          },
          "detail-type": Array [
            "Glue Crawler State Change",
          ],
          "source": Array [
            "aws.glue",
          ],
        },
        "Name": "taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[awsSucceeded",
        "State": "ENABLED",
      },
      "Type": "AWS::Events::Rule",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowdatalakecrawlertaxiyellowcrawleralphatokenawsregion4tokenaws1697E126": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "DatabaseName": "taxi-product",
        "Name": "taxi-yellow-crawler-alpha-\${token[aws.region.4]}-\${token[aws",
        "Role": Object {
          "Fn::GetAtt": Array [
            "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDE7805CA",
            "Arn",
          ],
        },
        "Targets": Object {
          "S3Targets": Array [
            Object {
              "Path": "s3://taxi-yellow-data-alpha-us-east-1-123456789012/raw/yellow/",
            },
          ],
        },
      },
      "Type": "AWS::Glue::Crawler",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowdatalakecreatorpermission900E7895": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDE7805CA",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::taxi-yellow-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxiyellowdatalakecrawlertaxiyellowglueroledatabasepermission4304619E": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketaxiyellowdatalakecrawlertaxiyellowRoleDE7805CA",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "CREATE_TABLE",
          "DESCRIBE",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "taxi-product",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxiyellowdatalakecreatorpermissionA1C751FD": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::taxi-yellow-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxiyellowdatalakelocationpermission5262A095": Object {
      "DependsOn": Array [
        "datalaketaxiyellowlfresources3buckettaxiyellowF9272769",
      ],
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "DATA_LOCATION_ACCESS",
        ],
        "Resource": Object {
          "DataLocationResource": Object {
            "S3Resource": "arn:aws:s3:::taxi-yellow-data-alpha-us-east-1-123456789012",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalaketaxiyellowlfresources3buckettaxiyellowF9272769": Object {
      "Properties": Object {
        "ResourceArn": "arn:aws:s3:::taxi-yellow-data-alpha-us-east-1-123456789012",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "datalaketestlakedatabase146A4E2A": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "test-lake",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "datalaketestlakedatalakeadminroledatalakeadministratorTBACC6D7714B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "lakeformation:AddLFTagsToResource",
                "lakeformation:RemoveLFTagsFromResource",
                "lakeformation:GetResourceLFTags",
                "lakeformation:ListLFTags",
                "lakeformation:CreateLFTag",
                "lakeformation:GetLFTag",
                "lakeformation:UpdateLFTag",
                "lakeformation:DeleteLFTag",
                "lakeformation:SearchTablesByLFTags",
                "lakeformation:SearchDatabasesByLFTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketestlakedatalakeadminroledatalakeadministratorTBACC6D7714B",
        "Roles": Array [
          Object {
            "Ref": "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketestlakedatalakeadminroledatalakeadministratorbasic42E4DDDE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Condition": Object {
                "StringEquals": Object {
                  "iam:AWSServiceName": "lakeformation.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PutRolePolicy",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/aws-service-role/lakeformation.amazonaws.com/AWSServiceRoleForLakeFormationDataAccess",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketestlakedatalakeadminroledatalakeadministratorbasic42E4DDDE",
        "Roles": Array [
          Object {
            "Ref": "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketestlakedatalakeadminroledatalakeadministratorcrossaccountCA5F9CEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ram:AcceptResourceShareInvitation",
                "ram:RejectResourceShareInvitation",
                "ec2:DescribeAvailabilityZones",
                "ram:EnableSharingWithAwsOrganization",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketestlakedatalakeadminroledatalakeadministratorcrossaccountCA5F9CEB",
        "Roles": Array [
          Object {
            "Ref": "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketestlakedatalakeadminroledatalakeadministratorlambdawriteCWlogs84641127": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowLogging",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketestlakedatalakeadminroledatalakeadministratorlambdawriteCWlogs84641127",
        "Roles": Array [
          Object {
            "Ref": "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Array [
                  "lakeformation.amazonaws.com",
                  "lambda.amazonaws.com",
                  "sagemaker.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSLakeFormationDataAdmin",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSGlueConsoleFullAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchLogsReadOnlyAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSLakeFormationCrossAccountManager",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonAthenaFullAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess",
              ],
            ],
          },
        ],
        "RoleName": "test-lake-datalake-admin-alpha-us-east-1-098765432109",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalaketestlakedatalakeadminrolelfdatalakeroleadminsettings91C36664": Object {
      "DependsOn": Array [
        "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
      ],
      "Properties": Object {
        "Admins": Array [
          Object {
            "DataLakePrincipalIdentifier": Object {
              "Fn::GetAtt": Array [
                "datalaketestlakedatalakeadminroledatalakeadministratorrole0CE6C3E6",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::LakeFormation::DataLakeSettings",
    },
    "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSLakeFormationDataAdmin",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Path": "/service-role/",
        "RoleName": "test-lake-datalake-creator-alpha-us-east-1-098765432109",
      },
      "Type": "AWS::IAM::Role",
    },
    "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast1098765432109DefaultPolicy7CC4F8C7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast1098765432109DefaultPolicy7CC4F8C7",
        "Roles": Array [
          Object {
            "Ref": "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "datalaketestlakelfdbcreatorpermissionA51CFA18": Object {
      "Properties": Object {
        "DataLakePrincipal": Object {
          "DataLakePrincipalIdentifier": Object {
            "Fn::GetAtt": Array [
              "datalaketestlakedatalakecreatorroleAWSDBCreatorServiceRoletestlakedatalakecreatoralphauseast10987654321091FAD830D",
              "Arn",
            ],
          },
        },
        "Permissions": Array [
          "ALTER",
          "CREATE_TABLE",
          "DROP",
        ],
        "Resource": Object {
          "DatabaseResource": Object {
            "Name": "test-lake",
          },
        },
      },
      "Type": "AWS::LakeFormation::Permissions",
    },
    "datalakeworkgroup682714D0": Object {
      "Properties": Object {
        "Description": "Default Data Lake Workgroup",
        "Name": "test-lake-workgroup-alpha-us-east-1-098765432109",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "EnforceWorkGroupConfiguration": true,
          "EngineVersion": Object {
            "EffectiveEngineVersion": "Athena engine version 2",
            "SelectedEngineVersion": "Athena engine version 2",
          },
          "ResultConfiguration": Object {
            "OutputLocation": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "datalakedatalakelogbucket0A814944",
                  },
                  "/results/",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "iotdatadatasetstackNestedStackiotdatadatasetstackNestedStackResource879D8A95": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetoAssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7S3BucketAFA2A4C8Ref": Object {
            "Ref": "AssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7S3BucketAFA2A4C8",
          },
          "referencetoAssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7S3VersionKeyBA5D3250Ref": Object {
            "Ref": "AssetParameters4c111876a8e847cd355ed33802580b2ff40e1749027a4507ccdfdf2d6deb0af7S3VersionKeyBA5D3250",
          },
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3FRef": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626Ref": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
          },
          "referencetodatalakedatalakelogbucket0A814944Ref": Object {
            "Ref": "datalakedatalakelogbucket0A814944",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766S3BucketA0D0EA6E",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766S3VersionKeyCC2E332C",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters8b9a5ae01fce04a6b6d2c28c08f2eda75502d0a2272efe76bd5c274a61343766S3VersionKeyCC2E332C",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "reviewsdatasetstackNestedStackreviewsdatasetstackNestedStackResource3B660F85": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3FRef": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626Ref": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
          },
          "referencetodatalakedatalakelogbucket0A814944Ref": Object {
            "Ref": "datalakedatalakelogbucket0A814944",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersabc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755S3BucketDD8C80DC",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersabc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755S3VersionKey8EC31A72",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersabc2cf3871ad4743721037395cdfd109f5fca1ccfcdd9612ebb12da1071e5755S3VersionKey8EC31A72",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "taxigreendatasetstackNestedStacktaxigreendatasetstackNestedStackResource56C75800": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3FRef": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626Ref": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
          },
          "referencetodatalakedatalakelogbucket0A814944Ref": Object {
            "Ref": "datalakedatalakelogbucket0A814944",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1fS3Bucket2F37597C",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1fS3VersionKey1B802B5E",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters298245a0905bd75cefe60439611b7f3d226752a54011351a4d1fa7e8c5077f1fS3VersionKey1B802B5E",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "taxiyellowdatasetstackNestedStacktaxiyellowdatasetstackNestedStackResource56DD6B4B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3FRef": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "referencetoAssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626Ref": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
          },
          "referencetodatalakedatalakelogbucket0A814944Ref": Object {
            "Ref": "datalakedatalakelogbucket0A814944",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersb44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950S3Bucket61676D8F",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersb44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950S3VersionKey8AA54FD3",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersb44d299e96158d8fe35962709ee2fc92f237a943478dd1817d4bda1e6d7dd950S3VersionKey8AA54FD3",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
